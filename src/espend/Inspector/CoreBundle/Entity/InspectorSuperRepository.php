<?php

namespace espend\Inspector\CoreBundle\Entity;

use Doctrine\DBAL\Connection;
use Doctrine\ORM\EntityRepository;
use espend\Inspector\CoreBundle\espendInspectorCoreEnum;

/**
 * InspectorSuperRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InspectorSuperRepository extends EntityRepository
{
    public function getClassCount($classId) {

        $qb = $this->createQueryBuilder('inst');
        $qb->select('count(inst.id)');
        $qb->andWhere('inst.class = :class');
        $qb->setParameter('class', $classId);

        return $qb->getQuery()->getSingleScalarResult();
    }

    public function getSubClassesIds($class_id) {

        $class_ids = array($class_id);

        /** @var Connection $conn */
        $conn = $this->_em->getConnection();
        $stmt = $conn->executeQuery('SELECT @pv := class_id AS class_id, child_id FROM inspector_super JOIN (SELECT @pv :=:id) tmp WHERE child_id = @pv', array('id' => $class_id));

        foreach($stmt->fetchAll() as $item) {
            $class_ids[] = intval($item['class_id']);
        };

        return array_unique($class_ids);
    }

    public function getHistList($limit = 8) {
        $qb = $this->createQueryBuilder('super');

        $qb->join('super.child', 'child');
        $qb->groupBy('child.id');
        $qb->select(array(
            'child.class',
            'count(child.id) as total'
        ));

        $qb->orderBy('total', 'DESC');
        $qb->setMaxResults($limit);
        $qb->andWhere($qb->expr()->notIn('child.class', espendInspectorCoreEnum::CORE_CLASS_REDUCE));

        return $qb->getQuery();
    }

}
